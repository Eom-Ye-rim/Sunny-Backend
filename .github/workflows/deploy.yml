name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  base:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy appliaction.yml
        run: |
          echo ${{ secrets.APPLICATION_YML }} | base64 --decode > src/test/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build

      - name: Build App
        run: ./gradlew bootJar

      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu"
          strip_components: 2

#  docker:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Copy appliaction.yml
#        run: |
#          echo ${{ secrets.APPLICATION_YML_AWS }} | base64 --decode > src/main/resources/application-local.yml
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Docker Image Build
#        run: docker build -t tkfdkskarl78/sunny-server:aws .
#
#      - name: Docker Hub Login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Docker Hub push
#        run: docker push tkfdkskarl78/sunny-server:aws
#
#      - name: Docker Pull And run
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: 22
#          script: |
#            #            docker stop sunny-server
#            #            docker rm sunny-server
#            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#            docker pull tkfdkskarl78/sunny-server:aws
#            docker run -d -p 8080:8080 --name sunny-server tkfdkskarl78/sunny-server:aws
#
#  docker2:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Copy appliaction.yml
#        run: |
#          echo ${{ secrets.APPLICATION_YML }} | base64 --decode > src/main/resources/application-local.yml
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Docker Image Build
#        run: docker build -t tkfdkskarl78/sunny-server .
#
#      - name: Docker Hub Login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Docker Hub push
#        run: docker push tkfdkskarl78/sunny-server
#
#      - name: Docker Pull And run
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: 22
#          script: |
#            docker stop sunny-server
#            docker rm sunny-server
#            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#            docker pull tkfdkskarl78/sunny-server
#            docker run -d -p 8080:8080 --name sunny-server tkfdkskarl78/sunny-server
#      - name: Execute Server Init Script
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            sh /home/${{ secrets.EC2_USERNAME }}/deploy.sh